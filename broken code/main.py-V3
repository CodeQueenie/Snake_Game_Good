import pygame
from game import Game
from leaderboard import Leaderboard
from user import User
from sound import Sound
from admin import AdminPanel
from utils import log_error

def main():
    pygame.init()
    screen = pygame.display.set_mode((800, 600))
    pygame.display.set_caption("Snake Game")
    clock = pygame.time.Clock()
    game = Game(screen)
    leaderboard = Leaderboard()
    sound = Sound()
    admin_panel = AdminPanel()

    # Load game settings
    settings = admin_panel.load_settings()
    if settings:
        game_length = settings["game_length"]
        food_size = settings["food_size"]
        game_window_width = settings["game_window_width"]
        game_window_height = settings["game_window_height"]
    else:
        # Default settings
        game_length = 5
        food_size = 12
        game_window_width = 800
        game_window_height = 600
        print("First run detected, opening admin panel.")
        admin_panel.manage_users()

    try:
        while True:
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    pygame.quit()
                    exit()
                elif event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_p:
                        game.pause()
                    elif event.key == pygame.K_r:
                        game.resume()
                    elif event.key == pygame.K_x and pygame.key.get_mods() & pygame.KMOD_CTRL:
                        pygame.quit()
                        exit()
                    elif event.key == pygame.K_n and pygame.key.get_mods() & pygame.KMOD_CTRL:
                        game.new_game()
                    elif event.key == pygame.K_s and pygame.key.get_mods() & pygame.KMOD_CTRL:
                        game.save_game()
                    elif event.key == pygame.K_a and pygame.key.get_mods() & pygame.KMOD_CTRL:
                        admin_panel.manage_users()

            game.handle_events()
            game.update()
            game.draw()
            pygame.display.flip()
            clock.tick(game.speed)
    except Exception as e:
        log_error("main", str(e))
    finally:
        pygame.quit()

if __name__ == "__main__":
    main()
# Generated by Nicole LeGuern